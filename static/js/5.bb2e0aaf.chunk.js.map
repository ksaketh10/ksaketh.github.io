{"version":3,"sources":["_constants/Messages.js","_actions/snackbar.action.js","_components/CustomizedSnackbar.js","_images/zemoso-logo.svg","_components/AccountLogoutSelect.js","_components/Header.js","_actions/employee.action.js","_services/EmployeeService.js","_components/ConfirmationDialog.js","_components/EmployeeSkillDataTable.js","_actions/skill.action.js","_actions/project.action.js","_components/MultiSelector.js","_components/EmployeeInfoDialog.js","_services/SkillService.js","_services/ProjectService.js","_components/CreateNewButton.js","views/dashboard/index.js","views/homepage/index.js"],"names":["__webpack_require__","d","__webpack_exports__","Messages","GENERIC_ERROR","NO_TABULAR_DATA","INVALID_EMAIL","INVALID_PASSWORD","ADD_EMPLOYEE_SUCCESS","UPDATE_EMPLOYEE_SUCCESS","DELETE_EMPLOYEE_SUCCESS","ADD_SKILL_SUCCESS","DELETE_SKILL_SUCCESS","ADD_PROJECT_SUCCESS","DELETE_PROJECT_SUCCESS","showSnackBar","_constants_UserActionConstants__WEBPACK_IMPORTED_MODULE_0__","snackbar","type","UserActions","SHOW_SNACKBAR","variantIcon","success","CheckCircleIcon","error","ErrorIcon","MySnackbarContentWrapper","withStyles","theme","backgroundColor","green","palette","dark","info","primary","warning","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","props","classes","className","onClose","variant","other","Object","_home_zadmin_Desktop_ztalent_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_5__","Icon","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_material_ui_core_SnackbarContent__WEBPACK_IMPORTED_MODULE_15___default","assign","classNames","aria-describedby","id","action","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_13___default","key","aria-label","color","close","onClick","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_10___default","CustomizedSnackbar","state","open","handleClose","event","reason","_this","setState","nextProps","nextContext","this","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_14___default","anchorOrigin","vertical","horizontal","autoHideDuration","React","Component","connect","margin","module","exports","p","AccountLogoutSelect","userLoggedOut","renderRedirect","react_default","react_router","to","handleLogout","localStorage","removeItem","CURRENT_USER","user","initials","getItem","split","charAt","match","index_es","container","item","xs","justify","orangeAvatar","Typography_default","padding","button","deepOrange","grow","flexGrow","paddingTop","height","root","imageLogo","position","shadow","boxShadow","AppBar_default","Toolbar_default","alt","src","zemosoIcon","_components_AccountLogoutSelect","onLogOut","retrieveEmployees","dispatch","Axios","EMPLOYEES_URL","then","data","FETCH_ALL_EMPLYOEES","fetchData","getErrorMessage","response","ConfirmationDialogRaw","_this$props","value","objectWithoutProperties","Dialog_default","disableBackdropClick","disableEscapeKeyDown","maxWidth","aria-labelledby","DialogTitle_default","DialogContent_default","content","DialogActions_default","Button_default","handleOk","handleCancel","ConfirmationDialog","ConfirmationDialog_ConfirmationDialogRaw","paper","width","background","maxHeight","EmployeeSkillDataTable","options","textLabels","body","noMatch","pagination","rowsPerPageOptions","search","print","download","viewColumns","filter","selectableRows","filterType","rowsData","columns","deleteEmpId","openConfirmDialog","onDeleteEmployee","deleteExistingEmployee","renderTableCell","tablecell","_this2","property","name","sort","sortDirection","customBodyRender","tableMeta","updateValue","componentsToRender","map","skill","Chip_default","label","chip","project","DoneAll_default","CloseOutlined_default","EditRounded_default","handleEditEmployeeClick","DeleteForeverRounded_default","getEmployees","_this3","employees","datasets","forEach","employee","dataset","column","items","push","editEmp","empId","firstName","lastName","designation","skills","projectAssigned","projects","concat","dist_default","title","table","_components_ConfirmationDialog","connectedEmployeeSkillData","delete","DELETE_EMPLOYEE_URL","deleteEmployee","justifyContent","flexWrap","marginTop","overflowX","removeLine","textDecoration","heading","weight","minWidth","inputComponent","_ref","inputRef","ref","Option","MenuItem_default","buttonRef","innerRef","selected","isFocused","component","style","fontWeight","isSelected","innerProps","children","Placeholder","selectProps","placeholder","ValueContainer","valueContainer","Control","TextField_default","fullWidth","InputProps","inputProps","objectSpread","input","textFieldProps","MultiValue","tabIndex","defineProperty","chipFocused","onDelete","removeProps","deleteIcon","Cancel_default","Menu","Paper_default","square","MultiSelector","newItem","multi","selectedItems","searchText","handleNewItemClick","length","onAddNewItem","onInputChange","newValue","actionMeta","NoOptionsMessage","size","inputValue","Add_default","noOptionsMessage","components","handleChange","handleSelectedItems","newSeletectedItems","suggestions","selectStyles","base","text","& input","font","NoSsr_default","react_select_esm","styles","InputLabelProps","shrink","onChange","isMulti","flex","overflow","emphasize","grey","left","zIndex","right","divider","withTheme","EmployeeInfoDialog","allSkills","allProjects","mode","CREATE_NEW_EMPLOYEE","onChangeEmpId","setNewState","target","onChangeFirstName","onChangeLastName","onChangeDesignation","handleSelectedSkills","handleSelectedProjects","newState","handleOkay","e","preventDefault","empRequest","createEmployee","UPDATE_EMPLOYEE","editEmployee","onAddNewSkill","insertNewSkill","onAddNewProject","insertNewProject","getSkills","getProjects","openDialog","main","form","onSubmit","required","autoFocus","disabled","_components_MultiSelector","SKILLS_URL","FETCH_ALL_SKILLS","formData","tag","post","auth","username","AUTH_USER","password","AUTH_PASS","headers","content-type","createSkill","createNewEmployee","put","UPDATE_EMPLOYEE_URL","updateEmployee","PROJECTS_URL","FETCH_ALL_PROJECTS","createProject","marginLeft","leftIcon","href","Dashboard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDialogClose","handleNewEmployeeClick","resetState","_components_Header","_components_CreateNewButton","_components_EmployeeSkillDataTable","_components_EmployeeInfoDialog","card","gridContainer","box","borderRadius","dashboard"],"mappings":"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","file":"static/js/5.bb2e0aaf.chunk.js","sourcesContent":["export const Messages = {\n    // common error messages\n    GENERIC_ERROR: \"Sorry, something went wrong\",\n    NO_TABULAR_DATA: \"Sorry, no results were found\",\n\n    // Login error messages\n    INVALID_EMAIL: \"Sorry, invalid zemoso email\",\n    INVALID_PASSWORD: \"Sorry, password should be minimum 6 characters\",\n\n    // Add/Edit/Delete employee success messages\n    ADD_EMPLOYEE_SUCCESS: \"Employee added successfully\",\n    UPDATE_EMPLOYEE_SUCCESS: \"Employee updated successfully\",\n    DELETE_EMPLOYEE_SUCCESS: \"Employee deleted successfully\",\n\n    // Add/Delete skill success messages\n    ADD_SKILL_SUCCESS: \"Skill added successfully\",\n    DELETE_SKILL_SUCCESS: \"Skill deleted successfully\",\n\n    // Add/Delete skill success messages\n    ADD_PROJECT_SUCCESS: \"Project added successfully\",\n    DELETE_PROJECT_SUCCESS: \"Project deleted successfully\",\n};\n","import { UserActions } from \"../_constants/UserActionConstants\"\n\nexport function showSnackBar(snackbar) {\n    return { type: UserActions.SHOW_SNACKBAR, snackbar };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    error: ErrorIcon,\n};\n\nconst styles1 = theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing.unit,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={classNames(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'error']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nconst styles2 = theme => ({\n    margin: {\n        margin: theme.spacing.unit,\n    },\n});\n\nclass CustomizedSnackbar extends React.Component {\n    state = {\n        open: false,\n        variant: \"\",\n        message: \"\"\n    };\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({ open: false });\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            open: nextProps.snackbar.open,\n            variant: nextProps.snackbar.variant,\n            message: nextProps.snackbar.message\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={6000}\n                    onClose={this.handleClose}\n                >\n                    <MySnackbarContentWrapper\n                        onClose={this.handleClose}\n                        variant={this.state.variant}\n                        message={this.state.message}\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nfunction mapsStateToProps(state) {\n    const { snackbar } = state.snackbar;\n    return {\n        snackbar\n    };\n}\n\nCustomizedSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapsStateToProps)(withStyles(styles2)(CustomizedSnackbar));\n","module.exports = __webpack_public_path__ + \"static/media/zemoso-logo.115b9c18.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport { Redirect } from 'react-router-dom';\nimport { Grid, Avatar, Button } from '@material-ui/core';\nimport { CURRENT_USER } from '../_constants/UriConstants';\n\nconst styles = theme => ({\n  orangeAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: deepOrange[500],\n  },\n  grow: {\n    flexGrow: 1\n  },\n  padding: {\n    paddingTop: 12\n  },\n  button: {\n    margin: 10,\n    height: 40\n  }\n});\n\nclass AccountLogoutSelect extends React.Component {\n\n  state = {\n    open: false,\n    userLoggedOut: false\n  };\n\n  renderRedirect = () => {\n    if (this.state.userLoggedOut) {\n      return <Redirect to='/login' />\n    }\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem(CURRENT_USER);\n    this.setState({\n      userLoggedOut: true\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    let user, initials;\n    if (localStorage.getItem(CURRENT_USER) && !this.state.userLoggedOut) {\n      user = localStorage.getItem(CURRENT_USER).split(\".\");\n      initials = user[0].charAt(0) + user[1].match(/^([^.]*)./)[1].charAt(0);//concat first letters of first name and last name\n    }\n    return (\n      <div>\n        {this.renderRedirect()}\n        <Grid container >\n          <Grid item xs={2} container justify=\"flex-end\">\n            <Avatar className={classes.orangeAvatar}>{initials}</Avatar>\n          </Grid>\n          <Grid item xs={4} container justify=\"flex-start\">\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.padding}>\n              {user ? user[0] : \"\"}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} container justify=\"flex-end\">\n            <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={this.handleLogout}>\n              Log Out\n          </Button>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nAccountLogoutSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AccountLogoutSelect);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport zemosoIcon from '../_images/zemoso-logo.svg'\nimport { Grid, Avatar } from '@material-ui/core';\nimport AccountLogoutSelect from './AccountLogoutSelect';\n\nconst styles = {\n    root: {\n        flexGrow: 1\n    },\n    grow: {\n        flexGrow: 1,\n        paddingTop: 12\n    },\n    imageLogo: {\n        position: 'absolute',\n        paddingTop: 10\n    },\n    shadow: { boxShadow: 'none' }\n};\n\nfunction Header(props) {\n    const { classes } = props;\n    return (\n        <AppBar position=\"static\" color=\"default\" className={classes.shadow}>\n            <Toolbar>\n                <Grid container spacing={24}>\n                    <Grid item xs={2} container justify=\"flex-end\">\n                        <Avatar alt=\"Remy Sharp\" src={zemosoIcon} className={classes.imageLogo} />\n                    </Grid>\n                    <Grid item xs={4} container justify=\"flex-end\">\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                            ZE - TALENT\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6} container justify=\"flex-end\">\n                        <AccountLogoutSelect onLogOut={props.onLogOut} />\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);\n","import { getAllEmployees, createNewEmployee, updateEmployee, deleteEmployee } from \"../_services/EmployeeService\"\nimport { UserActions } from \"../_constants/UserActionConstants\"\nimport { showSnackBar } from \"./snackbar.action\";\nimport { Messages } from \"../_constants/Messages\";\n\nexport function getEmployees() {\n    return dispatch => {\n        retrieveEmployees(dispatch);\n    };\n}\n\nexport function createEmployee(employee) {\n    return dispatch => {\n        createNewEmployee(employee)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.ADD_EMPLOYEE_SUCCESS));\n                    retrieveEmployees(dispatch);\n                },\n                error => {\n                    dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n                }\n            );\n    };\n}\n\nexport function editEmployee(employee) {\n    return dispatch => {\n        updateEmployee(employee)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.UPDATE_EMPLOYEE_SUCCESS));\n                    retrieveEmployees(dispatch);\n                },\n                error => {\n                    dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n                }\n            );\n    };\n}\n\nexport function deleteExistingEmployee(id) {\n    return dispatch => {\n        deleteEmployee(id)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.DELETE_EMPLOYEE_SUCCESS));\n                    retrieveEmployees(dispatch);\n\n                },\n                error => {\n                    dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n                }\n            );\n    };\n}\n\nfunction retrieveEmployees(dispatch) {\n    getAllEmployees()\n        .then(data => {\n            dispatch(fetchData(data));\n        }, error => {\n            dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n        });\n}\n\nfunction fetchData(data) {\n    return { type: UserActions.FETCH_ALL_EMPLYOEES, data: data }\n}\n\nfunction getErrorMessage(error) {\n    return (error && error.data) ? error.data.message : Messages.GENERIC_ERROR;\n}\n\nfunction snackbar(variant, message) {\n    return showSnackBar({\n        variant: variant,\n        open: true,\n        message: message\n    });\n}","import Axios from \"axios\";\nimport { EMPLOYEES_URL, AUTH_USER, AUTH_PASS, UPDATE_EMPLOYEE_URL, DELETE_EMPLOYEE_URL } from \"../_constants/UriConstants\";\n\nexport function getAllEmployees() {\n    return Axios(EMPLOYEES_URL)\n}\n\nexport function createNewEmployee(employee) {\n    let headers = { 'content-type': 'application/json' };\n    const formData = {\n        'empId':employee.empId,\n        'firstName': employee.firstName,\n        'lastName': employee.lastName,\n        'designation': employee.designation,\n        'skills': employee.skills,\n        'projectAssigned': employee.projectAssigned,\n        'projects': employee.projects\n    };\n\n    return Axios.post(EMPLOYEES_URL, formData, {\n        auth: {\n            username: AUTH_USER,\n            password: AUTH_PASS\n        },\n        headers: headers,\n    })\n}\n\nexport function updateEmployee(employee) {\n    let headers = { 'content-type': 'application/json' };\n    const formData = {\n        'empId':employee.empId,\n        'firstName': employee.firstName,\n        'lastName': employee.lastName,\n        'designation': employee.designation,\n        'skills': employee.skills,\n        'projectAssigned': employee.projectAssigned,\n        'projects': employee.projects\n    };\n\n    return Axios.put(UPDATE_EMPLOYEE_URL + `/${employee.id}`, formData, {\n        auth: {\n            username: AUTH_USER,\n            password: AUTH_PASS\n        },\n        headers: headers,\n    })\n}\n\nexport function deleteEmployee(id) {\n    return Axios.delete(DELETE_EMPLOYEE_URL + `/${id}`)\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Typography } from '@material-ui/core';\n\nclass ConfirmationDialogRaw extends React.Component {\n\n    render() {\n        const { value, ...other } = this.props;\n\n        return (\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                maxWidth=\"xs\"\n                aria-labelledby=\"confirmation-dialog-title\"\n                {...other}\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">\n                    Confirm\n                </DialogTitle>\n                <DialogContent>\n                    <Typography variant=\"caption\" color=\"inherit\">{this.props.content}</Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" onClick={this.props.handleOk} color=\"primary\">\n                        Ok\n                    </Button>\n                    <Button onClick={this.props.handleCancel}>\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nConfirmationDialogRaw.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    paper: {\n        width: '80%',\n        maxHeight: 435,\n    },\n});\n\nclass ConfirmationDialog extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleCancel = () => {\n        this.setState({ open: false });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ open: nextProps.open });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <ConfirmationDialogRaw\n                    classes={{\n                        paper: classes.paper,\n                    }}\n                    open={this.state.open}\n                    handleCancel={this.handleCancel}\n                    handleOk={this.props.handleOk}\n                    content={this.props.content}\n                />\n            </div>\n        );\n    }\n}\n\nConfirmationDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ConfirmationDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { Messages } from \"../_constants/Messages\";\nimport { getEmployees, deleteExistingEmployee } from \"../_actions/employee.action\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DoneAll from \"@material-ui/icons/DoneAll\"\nimport CloseRounded from \"@material-ui/icons/CloseOutlined\";\nimport EditIcon from '@material-ui/icons/EditRounded';\nimport DeleteIcon from '@material-ui/icons/DeleteForeverRounded';\nimport ConfirmationDialog from './ConfirmationDialog';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexWrap: 'wrap',\n        width: '100%',\n        marginTop: theme.spacing.unit,\n        overflowX: 'auto',\n    },\n    tablecell: {\n        fontSize: 15\n    },\n    removeLine: {\n        fontSize: 15,\n        textDecoration: \"none\"\n    },\n    heading: {\n        fontSize: 20,\n        weight: \"bold\"\n    },\n    table: {\n        minWidth: 700,\n    },\n    chip: {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n        color: \"primary\",\n        fontSize: 10\n    }\n});\n\nclass EmployeeSkillDataTable extends React.Component {\n    options = {\n        textLabels: {\n            body: {\n                noMatch: Messages.NO_TABULAR_DATA\n            }\n        },\n        pagination: true,\n        rowsPerPageOptions: [10, 25, 50, 100],\n        search: true,\n        print: false,\n        download: true,\n        viewColumns: true,\n        filter: true,\n        selectableRows: false,\n        filterType: 'multiselect'\n    };\n\n    state = {\n        rowsData: [],\n        columns: [],\n        deleteEmpId: null,\n        openConfirmDialog: false\n    };\n\n    onDeleteEmployee = (id) => {\n        this.setState({\n            deleteEmpId: id,\n            openConfirmDialog: true\n        })\n    }\n\n    handleOk = () => {\n        this.props.deleteExistingEmployee(this.state.deleteEmpId);\n    }\n\n    componentWillMount() {\n        const columns = [\n            {\n                property: \"empId\",\n                name: <Typography>EMP ID</Typography>,\n                options: {\n                    sort: true,\n                    sortDirection: \"asc\",\n                    filter: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return this.renderTableCell(value);\n                    }\n                }\n            },\n            {\n                property: \"firstName\",\n                name: <Typography>FIRST NAME</Typography>,\n                options: {\n                    filter: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return this.renderTableCell(value);\n                    }\n                }\n            },\n            {\n                property: \"lastName\",\n                name: <Typography>LAST NAME</Typography>,\n                options: {\n                    filter: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return this.renderTableCell(value);\n                    },\n                },\n            },\n            {\n                property: \"designation\",\n                name: <Typography>DESIGNATION</Typography>,\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return this.renderTableCell(value);\n                    }\n                }\n            },\n            {\n                property: \"skills\",\n                name: <Typography>SKILLS</Typography>,\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        let componentsToRender = value.map(skill => {\n                            return (\n                                <Chip\n                                    key={skill}\n                                    label={skill}\n                                    color=\"primary\"\n                                    className={this.props.classes.chip}\n                                />\n                            )\n                        })\n                        return (\n                            <div className={this.props.classes.root}>\n                                {componentsToRender}\n                            </div>\n                        );\n                    }\n                }\n            },\n            {\n                property: \"projects\",\n                name: <Typography>PROJECTS</Typography>,\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        let componentsToRender = value.map(project => {\n                            return (\n                                <Chip\n                                    key={project}\n                                    label={project}\n                                    color=\"secondary\"\n                                    className={this.props.classes.chip}\n                                />\n                            )\n                        })\n                        return (\n                            <div className={this.props.classes.root}>\n                                {componentsToRender}\n                            </div>\n                        );\n                    }\n                }\n            },\n            {\n                property: \"projectAssigned\",\n                name: <Typography>ASSIGN</Typography>,\n                options: {\n                    filterType: 'dropdown',\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        let componentsToRender = value ? <DoneAll color=\"primary\" /> : <CloseRounded color=\"secondary\" />\n                        return (\n                            componentsToRender\n                        );\n                    }\n                }\n            },\n            {\n                property: \"edit\",\n                name: <Typography>EDIT</Typography>,\n                options: {\n                    filter: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return <EditIcon onClick={() => this.props.handleEditEmployeeClick(value)} />\n                    }\n                }\n            },\n            {\n                property: \"delete\",\n                name: <Typography>DELETE</Typography>,\n                options: {\n                    filter: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return <DeleteIcon color=\"secondary\" onClick={() => this.onDeleteEmployee(value)} />\n                    }\n                }\n            }\n        ];\n        this.setState({ columns: columns });\n    }\n\n    componentDidMount() {\n        this.props.getEmployees();\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.employees) {\n            let employees = nextProps.employees.data;\n            let datasets = [];\n            employees.forEach(employee => {\n                let dataset = [];\n                this.state.columns.forEach(column => {\n                    if (column.property === \"skills\" || column.property === \"projects\") {//for skills and projects push items array into dataset \n                        let items = [];\n                        employee[column.property].forEach(item => {\n                            items.push(item);\n                        })\n                        dataset.push(items);\n                    } else if (column.property === \"edit\") {//for edit add the employee information as value\n                        let editEmp = {\n                            \"id\": employee[\"id\"],\n                            \"empId\": employee[\"empId\"],\n                            \"firstName\": employee[\"firstName\"],\n                            \"lastName\": employee[\"lastName\"],\n                            \"designation\": employee[\"designation\"],\n                            \"skills\": employee[\"skills\"],\n                            \"projectAssigned\": employee[\"projectAssigned\"],\n                            \"projects\": employee[\"projects\"]\n                        };\n                        dataset = dataset.concat(editEmp);\n                    } else if (column.property === \"delete\") {//for delete add the employee id as value\n                        dataset = dataset.concat(employee[\"id\"]);\n                    } else {\n                        dataset = dataset.concat(employee[column.property]);\n                    }\n                });\n                datasets.push(dataset);\n            });\n            this.setState({\n                rowsData: datasets,\n                deleteEmpId: null,\n                openConfirmDialog: false\n            });\n        }\n    }\n\n    renderTableCell = (value) => {\n        return (\n            <Typography className={this.props.classes.tablecell}>{value}</Typography>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <MUIDataTable\n                    title={\"Employee Skills\"}\n                    className={this.props.classes.table}\n                    data={this.state.rowsData}\n                    columns={this.state.columns}\n                    options={this.options}\n                />\n                <ConfirmationDialog\n                    open={this.state.openConfirmDialog}\n                    handleOk={this.handleOk}\n                    content=\"Are you sure you want to delete this employee\"\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapsStateToProps(state) {\n    const { employees } = state.employees;\n    return {\n        employees\n    };\n}\n\nconst connectedEmployeeSkillData = connect(mapsStateToProps, { getEmployees, deleteExistingEmployee })(\n    withStyles(styles)(EmployeeSkillDataTable)\n);\n\nexport default connectedEmployeeSkillData;\n","import { getAllSkills, createSkill, deleteSkill } from \"../_services/SkillService\"\nimport { UserActions } from \"../_constants/UserActionConstants\"\nimport { showSnackBar } from \"./snackbar.action\";\nimport { Messages } from \"../_constants/Messages\";\n\nexport function getSkills() {\n    return dispatch => {\n        getAllSkills()\n            .then(\n                data => {\n                    dispatch(fetchData(data));\n                },\n                error => {\n                    dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n                }\n            );\n    };\n\n    function fetchData(data) {\n        return { type: UserActions.FETCH_ALL_SKILLS, data: data }\n    }\n}\n\nexport function insertNewSkill(skill) {\n    return dispatch => {\n        createSkill(skill)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.ADD_SKILL_SUCCESS));\n                    this.getSkills();\n                },\n                error => {\n                    dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n                }\n            );\n    };\n}\n\nexport function deleteExistingSkill(id) {\n    return dispatch => {\n        deleteSkill(id)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.DELETE_SKILL_SUCCESS));\n                    this.getSkills();\n                },\n                error => {\n                    dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n                }\n            );\n    };\n}\n\nfunction getErrorMessage(error) {\n    return (error && error.data) ? error.data.message : Messages.GENERIC_ERROR;\n}\n\nfunction snackbar(variant, message) {\n    return showSnackBar({\n        variant: variant,\n        open: true,\n        message: message\n    });\n}\n","import { getAllProjects, createProject, deleteProject } from \"../_services/ProjectService\"\nimport { UserActions } from \"../_constants/UserActionConstants\"\nimport { showSnackBar } from \"./snackbar.action\";\nimport { Messages } from \"../_constants/Messages\";\n\nexport function getProjects() {\n    return dispatch => {\n        getAllProjects()\n            .then(\n                data => {\n                    dispatch(fetchData(data));\n                },\n                error => {\n                    dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n                }\n            );\n    };\n\n    function fetchData(data) {\n        return { type: UserActions.FETCH_ALL_PROJECTS, data: data }\n    }\n}\n\nexport function insertNewProject(project) {\n    return dispatch => {\n        createProject(project)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.ADD_PROJECT_SUCCESS));\n                    this.getProjects();\n                },\n                error => {\n                    dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n                }\n            );\n    };\n}\n\nexport function deleteExistingProject(id) {\n    return dispatch => {\n        deleteProject(id)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.DELETE_PROJECT_SUCCESS));\n                    this.getProjects();\n                },\n                error => {\n                    dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n                }\n            );\n    }\n}\n\nfunction getErrorMessage(error) {\n    return (error && error.data) ? error.data.message : Messages.GENERIC_ERROR;\n}\n\nfunction snackbar(variant, message) {\n    return showSnackBar({\n        variant: variant,\n        open: true,\n        message: message\n    });\n}\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\nimport { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    input: {\n        display: 'flex',\n        padding: 0,\n    },\n    valueContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flex: 1,\n        alignItems: 'center',\n        overflow: 'hidden',\n    },\n    chip: {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n    },\n    chipFocused: {\n        backgroundColor: emphasize(\n            theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n            0.08,\n        ),\n    },\n    noOptionsMessage: {\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    },\n    placeholder: {\n        position: 'absolute',\n        left: 2,\n        fontSize: 16,\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing.unit,\n        left: 0,\n        right: 0,\n    },\n    divider: {\n        height: theme.spacing.unit * 2,\n    },\n});\n\nfunction inputComponent({ inputRef, ...props }) {\n    return <div ref={inputRef} {...props} />;\n}\n\nfunction Option(props) {\n    return (\n        <MenuItem\n            buttonRef={props.innerRef}\n            selected={props.isFocused}\n            component=\"div\"\n            style={{\n                fontWeight: props.isSelected ? 500 : 400,\n            }}\n            {...props.innerProps}\n        >\n            {props.children}\n        </MenuItem>\n    );\n}\n\nfunction Placeholder(props) {\n    return (\n        <Typography\n            color=\"textSecondary\"\n            className={props.selectProps.classes.placeholder}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction ValueContainer(props) {\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nfunction Control(props) {\n    return (\n        <TextField\n            fullWidth\n            InputProps={{\n                inputComponent,\n                inputProps: {\n                    className: props.selectProps.classes.input,\n                    inputRef: props.innerRef,\n                    children: props.children,\n                    ...props.innerProps\n                },\n            }}\n            {...props.selectProps.textFieldProps}\n        />\n    );\n}\n\nfunction MultiValue(props) {\n    return (\n        <Chip\n            tabIndex={-1}\n            label={props.children}\n            className={classNames(props.selectProps.classes.chip, {\n                [props.selectProps.classes.chipFocused]: props.isFocused,\n            })}\n            onDelete={props.removeProps.onClick}\n            deleteIcon={<CancelIcon {...props.removeProps} />}\n        />\n    );\n}\n\nfunction Menu(props) {\n    return (\n        <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n            {props.children}\n        </Paper>\n    );\n}\n\nclass MultiSelector extends React.Component {\n    newItem = \"\";\n    state = {\n        multi: this.props.selectedItems ? this.props.selectedItems.map(item => ({\n            value: item,\n            label: item\n        })) : [],\n        items: this.props.items,\n        searchText: \"\"\n    };\n\n    handleNewItemClick = (value) => {\n        if (value.length !== 0) {\n            this.newItem = value;\n            this.props.onAddNewItem(value);\n        }\n    }\n\n    onInputChange = (newValue, actionMeta) => {\n        this.setState({\n            searchText: newValue\n        })\n    }\n\n    NoOptionsMessage = (props) => {\n        return (\n            <Button fullWidth variant=\"contained\" color=\"default\" size=\"small\" onClick={() => this.handleNewItemClick(props.selectProps.inputValue)}>\n                {props.selectProps.inputValue.length !== 0 && <AddIcon /> }\n                <Typography\n                    color=\"textPrimary\"\n                    className={props.selectProps.classes.noOptionsMessage}\n                    {...props.innerProps}\n                >\n                    {props.selectProps.inputValue.length !== 0 ? this.props.noOptionsMessage: props.children}\n                </Typography>\n            </Button>\n        );\n    }\n\n    components = {\n        Control,\n        Menu,\n        MultiValue,\n        NoOptionsMessage: this.NoOptionsMessage,\n        Option,\n        Placeholder,\n        ValueContainer\n    };\n\n    handleChange = value => {\n        let items = [];\n        this.setState({\n            multi: value,\n        });\n        value.forEach(item => {\n            items.push(item.value);\n        });\n        this.props.handleSelectedItems(items)\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.items !== this.props.items) {\n            this.setState({\n                items: nextProps.items,\n                searchText: \"\"\n            });\n            let newSeletectedItems = this.state.multi;\n            newSeletectedItems.push({\n                value: this.newItem,\n                label: this.newItem\n            });\n            this.handleChange(newSeletectedItems)\n        }\n    }\n\n    render() {\n        const { classes, theme } = this.props;\n        const suggestions = this.state.items.map(item => ({\n            value: item,\n            label: item\n        }));\n        const selectStyles = {\n            input: base => ({\n                ...base,\n                color: theme.palette.text.primary,\n                '& input': {\n                    font: 'inherit',\n                },\n            }),\n        };\n\n        return (\n            <div className={classes.root}>\n                <NoSsr>\n                    <Select\n                        classes={classes}\n                        styles={selectStyles}\n                        textFieldProps={{\n                            label: this.props.name,\n                            InputLabelProps: {\n                                shrink: true,\n                            },\n                        }}\n                        options={suggestions}\n                        components={this.components}\n                        value={this.state.multi}\n                        onChange={this.handleChange}\n                        placeholder={this.props.placeholder}\n                        inputValue={this.state.searchText}\n                        onInputChange={this.onInputChange}\n                        isMulti\n                    />\n                </NoSsr>\n            </div>\n        );\n    }\n}\n\nMultiSelector.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MultiSelector);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { connect } from 'react-redux'\nimport { createEmployee, editEmployee } from \"../_actions/employee.action\";\nimport { getSkills, insertNewSkill } from \"../_actions/skill.action\";\nimport { getProjects, insertNewProject } from \"../_actions/project.action\";\nimport { withStyles, Typography, FormControl, Grid } from '@material-ui/core';\nimport MultiSelector from './MultiSelector'\nimport { UserActions } from '../_constants/UserActionConstants';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  main: {\n    width: 'auto',\n    display: 'block',\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  form: {\n    width: '100%',\n  }\n})\n\nclass EmployeeInfoDialog extends React.Component {\n\n  state = {\n    open: false,\n    allSkills: [],//for populating skills dropdown\n    allProjects: [],//for populating projects dropdown\n    id: \"\",\n    empId: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    designation: \"\",\n    skills: [],//skills that user has selected\n    projects: [],//projects that user has selected\n    projectAssigned: false,\n    mode: UserActions.CREATE_NEW_EMPLOYEE\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n    this.props.handleClose();\n  };\n\n  onChangeEmpId = (event) => {\n    this.setNewState('empId', event.target.value);\n  }\n\n  onChangeFirstName = (event) => {\n    this.setNewState('firstName', event.target.value);\n  }\n\n  onChangeLastName = (event) => {\n    this.setNewState('lastName', event.target.value);\n  }\n\n  onChangeDesignation = (event) => {\n    this.setNewState('designation', event.target.value);\n  }\n\n  handleSelectedSkills = (skills) => {\n    this.setNewState('skills', skills);\n  }\n\n  handleSelectedProjects = (projects) => {\n    this.setNewState('projects', projects);\n  }\n\n  setNewState = (key, value) => {\n    let newState = {\n      id: this.state.id,\n      empId: this.state.empId,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      designation: this.state.designation,\n      skills: this.state.skills,\n      projects: this.state.projects,\n      projectAssigned: (key === 'projects' ? value.length !== 0 : this.state.projectAssigned),//if user doesn't select any project the field is false\n      mode: this.state.mode\n    }\n    newState[key] = value;\n    this.setState(newState);\n  }\n\n  handleOkay = (e) => {\n    e.preventDefault();\n    let empRequest = {\n      empId: this.state.empId,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      designation: this.state.designation,\n      skills: this.state.skills,\n      projects: this.state.projects,\n      projectAssigned: this.state.projectAssigned\n    };\n    if (this.state.mode === UserActions.CREATE_NEW_EMPLOYEE) {\n      this.props.createEmployee(empRequest);\n    } else if (this.state.mode === UserActions.UPDATE_EMPLOYEE) {\n      empRequest.id = this.state.id;\n      this.props.editEmployee(empRequest);\n    }\n    this.handleClose();\n  }\n\n  componentWillMount() {\n    this.props.getSkills();\n    this.props.getProjects();\n  }\n\n  onAddNewSkill = (value) => {\n    this.props.insertNewSkill(value)\n  }\n\n  onAddNewProject = (value) => {\n    this.props.insertNewProject(value)\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if ((nextProps.allSkills && nextProps.allSkills.data.length !== this.state.allSkills.length)\n      || (nextProps.allProjects && nextProps.allProjects.data.length !== this.state.allProjects.length)) {\n      this.setState({\n        open: nextProps.openDialog,\n        allSkills: nextProps.allSkills ? nextProps.allSkills.data : this.state.allSkills,\n        allProjects: nextProps.allProjects ? nextProps.allProjects.data : this.state.allProjects\n      });\n    } else {\n      this.setState({\n        open: nextProps.openDialog,\n        id: nextProps.id,\n        empId: nextProps.empId || \"\",\n        firstName: nextProps.firstName,\n        lastName: nextProps.lastName,\n        designation: nextProps.designation,\n        skills: nextProps.skills || [],\n        projects: nextProps.projects || [],\n        projectAssigned: nextProps.projectAssigned,\n        mode: nextProps.mode\n      });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          maxWidth={'sm'}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogContent>\n            <main className={classes.main}>\n              <Typography component=\"h1\" variant=\"h5\">\n                {this.state.mode}\n              </Typography>\n              <form className={classes.form} onSubmit={this.handleOkay}>\n                <FormControl fullWidth>\n                  <TextField\n                    required\n                    autoFocus\n                    margin=\"dense\"\n                    type=\"number\"\n                    disabled={this.state.mode === UserActions.UPDATE_EMPLOYEE}\n                    value={this.state.empId}\n                    onChange={this.onChangeEmpId}\n                    label=\"Employee Id\"\n                    fullWidth\n                  />\n                </FormControl>\n                <FormControl required fullWidth>\n                  <TextField\n                    required\n                    margin=\"dense\"\n                    value={this.state.firstName}\n                    onChange={this.onChangeFirstName}\n                    label=\"First Name\"\n                    fullWidth\n                  />\n                </FormControl>\n                <FormControl required fullWidth>\n                  <TextField\n                    margin=\"dense\"\n                    value={this.state.lastName}\n                    onChange={this.onChangeLastName}\n                    label=\"Last Name\"\n                    fullWidth\n                  />\n                </FormControl>\n                <FormControl margin=\"normal\" required fullWidth>\n                  <MultiSelector\n                    items={this.state.allSkills}\n                    selectedItems={this.state.skills}\n                    handleSelectedItems={this.handleSelectedSkills}\n                    name=\"skills\"\n                    placeholder=\"Select multiple skills\"\n                    onAddNewItem={this.onAddNewSkill}\n                    noOptionsMessage=\"Add this skill\"\n                  />\n                </FormControl>\n                <FormControl margin=\"normal\" required fullWidth>\n                  <MultiSelector\n                    items={this.state.allProjects}\n                    selectedItems={this.state.projects}\n                    handleSelectedItems={this.handleSelectedProjects}\n                    name=\"projects\"\n                    placeholder=\"Select multiple projects\"\n                    onAddNewItem={this.onAddNewProject}\n                    noOptionsMessage=\"Add this project\"\n                  />\n                </FormControl>\n                <FormControl required fullWidth>\n                  <TextField\n                    required\n                    margin=\"dense\"\n                    value={this.state.designation}\n                    onChange={this.onChangeDesignation}\n                    label=\"Designation\"\n                    fullWidth\n                  />\n                </FormControl>\n                <Grid container justify=\"flex-end\">\n                  <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                    Okay\n                  </Button>\n                  <Button onClick={this.handleClose} color=\"primary\">\n                    Cancel\n                   </Button>\n                </Grid>\n              </form>\n            </main>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapsStateToProps(state) {\n  const { skills } = state.skills;\n  const { projects } = state.projects;\n  return {\n    allSkills: skills,\n    allProjects: projects\n  };\n}\n\nexport default connect(mapsStateToProps, { getSkills, insertNewSkill, createEmployee, editEmployee, getProjects, insertNewProject })(\n  withStyles(styles)(EmployeeInfoDialog)\n);\n\n","import Axios from \"axios\";\nimport { SKILLS_URL, AUTH_USER, AUTH_PASS, DELETE_SKILL_URL } from \"../_constants/UriConstants\";\n\nexport function getAllSkills() {\n    return Axios(SKILLS_URL);\n}\n\nexport function createSkill(skill) {\n    let headers = { 'content-type': 'application/json' };\n    const formData = {\n        'tag': skill\n    };\n\n    return Axios.post(SKILLS_URL, formData, {\n        auth: {\n            username: AUTH_USER,\n            password: AUTH_PASS\n        },\n        headers: headers\n    });\n}\n\nexport function deleteSkill(id) {\n    let headers = { 'content-type': 'application/json' };\n    \n    return Axios.delete(DELETE_SKILL_URL+`${id}`,  {\n        auth: {\n            username: AUTH_USER,\n            password: AUTH_PASS\n        },\n        headers: headers\n    });\n}\n\n","import Axios from \"axios\";\nimport { PROJECTS_URL, DELETE_PROJECT_URL, AUTH_USER, AUTH_PASS } from \"../_constants/UriConstants\";\n\nexport function getAllProjects() {\n    return Axios(PROJECTS_URL)\n}\n\nexport function createProject(project) {\n    let headers = { 'content-type': 'application/json' };\n    const formData = {\n        'title': project\n    };\n\n    return Axios.post(PROJECTS_URL, formData, {\n        auth: {\n            username: AUTH_USER,\n            password: AUTH_PASS\n        },\n        headers: headers\n    })\n}\n\nexport function deleteProject(id) {\n    let headers = { 'content-type': 'application/json' };\n    \n    return Axios.delete(DELETE_PROJECT_URL+`${id}`,  {\n        auth: {\n            username: AUTH_USER,\n            password: AUTH_PASS\n        },\n        headers: headers\n    });\n}\n","import React from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { Typography, Button, withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n    button: {\n      margin: theme.spacing.unit,\n    },\n    leftIcon: {\n      marginRight: theme.spacing.unit,\n    }\n  });\n\nconst CreateNewButton = (props) => (\n    <Button variant=\"contained\" color=\"primary\" className={props.classes.button} href={props.href} onClick={props.onClick}>\n        <AddIcon className={props.classes.leftIcon}/>\n        <Typography variant=\"caption\" color=\"inherit\">{props.name}</Typography>\n    </Button>\n)\n\nexport default withStyles(styles)(CreateNewButton);","import React, { Component } from \"react\";\nimport Header from \"../../_components/Header\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport EmployeeSkillDataTable from \"../../_components/EmployeeSkillDataTable\";\nimport { Grid } from \"@material-ui/core\";\nimport EmployeeInfoDialog from \"../../_components/EmployeeInfoDialog\";\nimport { UserActions } from \"../../_constants/UserActionConstants\";\nimport Snackbar from \"../../_components/CustomizedSnackbar\";\nimport CreateNewButton from \"../../_components/CreateNewButton\";\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n        height: \"100%\"\n    },\n    card: {\n        height: 290,\n        width: 280\n    },\n    gridContainer: {\n        height: \"100%\",\n        margin: 0,\n        width: \"100%\"\n    },\n    box: {\n        borderRadius: 0\n    },\n    margin: {\n        marginLeft: 20,\n        marginRight: 20\n    }\n};\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = this.resetState();\n    }\n\n    handleEditEmployeeClick = (employee) => {\n        this.setState({\n            open: true,\n            id: employee.id,\n            empId: employee.empId,\n            firstName: employee.firstName,\n            lastName: employee.lastName,\n            designation: employee.designation,\n            skills: employee.skills,\n            projects: employee.projects,\n            projectAssigned: employee.projectAssigned,\n            mode: UserActions.UPDATE_EMPLOYEE\n        })\n    }\n\n    handleDialogClose = () => {\n        this.setState({\n            open: false\n        })\n    }\n\n    handleNewEmployeeClick = () => {\n        let state = this.resetState();\n        state.open = true;\n        this.setState(state);\n    }\n\n    resetState = () => {\n        return {\n            open: false,\n            id: null,\n            empId: null,\n            firstName: \"\",\n            lastName: \"\",\n            designation: \"\",\n            skills: \"\",\n            projects: \"\",\n            projectAssigned: false,\n            mode: UserActions.CREATE_NEW_EMPLOYEE\n        };\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <Header />\n                    </Grid>\n                    <Grid item xs={2} />\n                    <Grid item xs={10}>\n                        <Grid container >\n                            <Grid item xs={10}>\n                            </Grid>\n                            <Grid item xs={2} container justify=\"center\">\n                                <CreateNewButton\n                                    name=\"Add Employee\"\n                                    onClick={this.handleNewEmployeeClick}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} className={this.props.classes.margin}>\n                        <EmployeeSkillDataTable handleEditEmployeeClick={this.handleEditEmployeeClick} />\n                    </Grid>\n                </Grid>\n                <EmployeeInfoDialog\n                    id={this.state.id}\n                    empId={this.state.empId}\n                    handleClose={this.handleDialogClose}\n                    openDialog={this.state.open}\n                    firstName={this.state.firstName}\n                    lastName={this.state.lastName}\n                    designation={this.state.designation}\n                    skills={this.state.skills}\n                    projects={this.state.projects}\n                    projectAssigned={this.state.projectAssigned}\n                    mode={this.state.mode}\n                />\n                <Snackbar />\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Dashboard);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dashboard from '../dashboard';\n\nconst styles = {\n    root: {\n        height: '100%'\n    },\n    content: {\n        height: '90%'\n    }\n};\n\nconst HomePage = (props) => (\n    <div className={props.classes.root}>\n        <div className={props.classes.content}>\n            <Dashboard />\n        </div>\n    </div>\n);\n\nexport default withStyles(styles)(HomePage);\n"],"sourceRoot":""}