{"version":3,"sources":["_constants/Messages.js","_actions/snackbar.action.js","_components/CustomizedSnackbar.js","_images/zemoso-logo.svg","_components/AccountLogoutSelect.js","_components/Header.js","_actions/employee.action.js","_services/EmployeeService.js","_components/ConfirmationDialog.js","_components/EmployeeSkillDataTable.js","_actions/skill.action.js","_actions/project.action.js","_components/MultiSelector.js","_components/EmployeeInfoDialog.js","_services/SkillService.js","_services/ProjectService.js","_components/CreateNewButton.js","views/dashboard/index.js","views/homepage/index.js"],"names":["__webpack_require__","d","__webpack_exports__","Messages","GENERIC_ERROR","NO_TABULAR_DATA","INVALID_EMAIL","INVALID_PASSWORD","ADD_EMPLOYEE_SUCCESS","UPDATE_EMPLOYEE_SUCCESS","DELETE_EMPLOYEE_SUCCESS","ADD_SKILL_SUCCESS","DELETE_SKILL_SUCCESS","ADD_PROJECT_SUCCESS","DELETE_PROJECT_SUCCESS","SPECIAL_CHARACTERS_NOT_ALLOWED","showSnackBar","_constants_UserActionConstants__WEBPACK_IMPORTED_MODULE_0__","snackbar","type","UserActions","SHOW_SNACKBAR","variantIcon","success","CheckCircleIcon","error","ErrorIcon","MySnackbarContentWrapper","withStyles","theme","backgroundColor","green","palette","dark","info","primary","warning","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","props","classes","className","onClose","variant","other","Object","_home_zadmin_Desktop_ztalent_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_5__","Icon","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_material_ui_core_SnackbarContent__WEBPACK_IMPORTED_MODULE_15___default","assign","classNames","aria-describedby","id","action","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_13___default","key","aria-label","color","close","onClick","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_10___default","CustomizedSnackbar","state","open","handleClose","event","reason","_this","setState","nextProps","nextContext","this","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_14___default","anchorOrigin","vertical","horizontal","autoHideDuration","React","Component","connect","margin","module","exports","p","AccountLogoutSelect","userLoggedOut","renderRedirect","react_default","react_router","to","handleLogout","localStorage","removeItem","CURRENT_USER","user","initials","getItem","split","charAt","match","index_es","container","item","xs","justify","orangeAvatar","Typography_default","padding","button","deepOrange","grow","flexGrow","paddingTop","height","root","imageLogo","position","shadow","boxShadow","document","title","AppBar_default","Toolbar_default","alt","src","zemosoIcon","_components_AccountLogoutSelect","onLogOut","retrieveEmployees","dispatch","headers","Authorization","Content-Type","requestOptions","generateRequestOptions","EMPLOYEES_URL","Axios","getAllEmployees","then","data","FETCH_ALL_EMPLYOEES","fetchData","dispatchError","errorResponse","response","ConfirmationDialogRaw","_this$props","value","objectWithoutProperties","Dialog_default","disableBackdropClick","disableEscapeKeyDown","maxWidth","aria-labelledby","DialogTitle_default","DialogContent_default","content","DialogActions_default","Button_default","handleOk","handleCancel","ConfirmationDialog","ConfirmationDialog_ConfirmationDialogRaw","paper","width","background","maxHeight","EmployeeSkillDataTable","options","textLabels","body","noMatch","pagination","rowsPerPageOptions","search","print","download","viewColumns","filter","sort","selectableRows","filterType","rowsData","columns","deleteEmpId","openConfirmDialog","onDeleteEmployee","deleteExistingEmployee","renderTableCell","tablecell","_this2","property","name","label","sortDirection","customBodyRender","tableMeta","updateValue","componentsToRender","map","skill","Chip_default","chip","project","customFilterListRender","DoneAll_default","CloseOutlined_default","handleEditEmployeeClick","EditRounded_default","DeleteForeverRounded_default","getEmployees","_this3","employees","datasets","forEach","employee","dataset","column","items","push","editEmp","empId","firstName","lastName","designation","skills","projectAssigned","projects","concat","dist_default","table","_components_ConfirmationDialog","connectedEmployeeSkillData","authHeader","deleteEmployee","justifyContent","flexWrap","marginTop","overflowX","removeLine","textDecoration","heading","weight","minWidth","inputComponent","_ref","inputRef","ref","Option","MenuItem_default","buttonRef","innerRef","selected","isFocused","component","style","fontWeight","isSelected","innerProps","children","Placeholder","selectProps","placeholder","ValueContainer","valueContainer","Control","TextField_default","fullWidth","InputProps","inputProps","objectSpread","input","textFieldProps","MultiValue","tabIndex","defineProperty","chipFocused","onDelete","removeProps","deleteIcon","Cancel_default","MultiSelector","newItem","multi","selectedItems","searchText","handleNewItemClick","length","onAddNewItem","onInputChange","newValue","actionMeta","NoOptionsMessage","size","inputValue","Add_default","noOptionsMessage","components","handleChange","handleSelectedItems","newSeletectedItems","suggestions","selectStyles","base","text","& input","font","NoSsr_default","react_select_esm","styles","InputLabelProps","shrink","onChange","menuPlacement","maxMenuHeight","isMulti","flex","overflow","emphasize","grey","left","zIndex","right","divider","withTheme","hasError","firstname","EmployeeInfoDialog","allSkills","allProjects","mode","CREATE_NEW_EMPLOYEE","onChangeEmpId","setNewState","target","onChangeFirstName","onChangeLastName","onChangeDesignation","handleSelectedSkills","handleSelectedProjects","newState","handleOkay","e","preventDefault","empRequest","createEmployee","UPDATE_EMPLOYEE","editEmployee","onAddNewSkill","insertNewSkill","onAddNewProject","insertNewProject","getSkills","getProjects","openDialog","main","form","onSubmit","required","autoFocus","min","disabled","validateTextField","helperText","_components_MultiSelector","fieldName","isInvalid","test","SKILLS_URL","getAllSkills","FETCH_ALL_SKILLS","formData","tag","createSkill","createNewEmployee","updateEmployee","PROJECTS_URL","getAllProjects","FETCH_ALL_PROJECTS","createProject","marginLeft","CreateNewButton","href","Dashboard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDialogClose","handleNewEmployeeClick","resetState","_components_Header","_components_CreateNewButton","_components_EmployeeSkillDataTable","_components_EmployeeInfoDialog","card","gridContainer","box","borderRadius","dashboard"],"mappings":"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","file":"static/js/5.b20200fa.chunk.js","sourcesContent":["export const Messages = {\n    // common error messages\n    GENERIC_ERROR: \"Sorry, something went wrong\",\n    NO_TABULAR_DATA: \"Sorry, no results were found\",\n\n    // Login error messages\n    INVALID_EMAIL: \"Sorry, invalid zemoso email\",\n    INVALID_PASSWORD: \"Sorry, password should be minimum 6 characters\",\n\n    // Add/Edit/Delete employee success messages\n    ADD_EMPLOYEE_SUCCESS: \"Employee added successfully\",\n    UPDATE_EMPLOYEE_SUCCESS: \"Employee updated successfully\",\n    DELETE_EMPLOYEE_SUCCESS: \"Employee deleted successfully\",\n\n    // Add/Delete skill success messages\n    ADD_SKILL_SUCCESS: \"Skill added successfully\",\n    DELETE_SKILL_SUCCESS: \"Skill deleted successfully\",\n\n    // Add/Delete skill success messages\n    ADD_PROJECT_SUCCESS: \"Project added successfully\",\n    DELETE_PROJECT_SUCCESS: \"Project deleted successfully\",\n\n    SPECIAL_CHARACTERS_NOT_ALLOWED: \"Numbers or Special characters not allowed in first letter\"\n};\n","import { UserActions } from \"../_constants/UserActionConstants\"\n\nexport function showSnackBar(snackbar) {\n    return { type: UserActions.SHOW_SNACKBAR, snackbar };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    error: ErrorIcon,\n};\n\nconst styles1 = theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing.unit,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={classNames(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'error']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nconst styles2 = theme => ({\n    margin: {\n        margin: theme.spacing.unit,\n    },\n});\n\nclass CustomizedSnackbar extends React.Component {\n    state = {\n        open: false,\n        variant: \"\",\n        message: \"\"\n    };\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({ open: false });\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            open: nextProps.snackbar.open,\n            variant: nextProps.snackbar.variant,\n            message: nextProps.snackbar.message\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={6000}\n                    onClose={this.handleClose}\n                >\n                    <MySnackbarContentWrapper\n                        onClose={this.handleClose}\n                        variant={this.state.variant}\n                        message={this.state.message}\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nfunction mapsStateToProps(state) {\n    const { snackbar } = state.snackbar;\n    return {\n        snackbar\n    };\n}\n\nCustomizedSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapsStateToProps)(withStyles(styles2)(CustomizedSnackbar));\n","module.exports = __webpack_public_path__ + \"static/media/zemoso-logo.115b9c18.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport { Redirect } from 'react-router-dom';\nimport { Grid, Avatar, Button } from '@material-ui/core';\nimport { CURRENT_USER } from '../_constants/UriConstants';\n\nconst styles = theme => ({\n  orangeAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: deepOrange[500],\n  },\n  grow: {\n    flexGrow: 1\n  },\n  padding: {\n    paddingTop: 12\n  },\n  button: {\n    margin: 10,\n    height: 40\n  }\n});\n\nclass AccountLogoutSelect extends React.Component {\n\n  state = {\n    open: false,\n    userLoggedOut: false\n  };\n\n  renderRedirect = () => {\n    if (this.state.userLoggedOut) {\n      return <Redirect to='/login' />\n    }\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem(CURRENT_USER);\n    this.setState({\n      userLoggedOut: true\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    let user, initials;\n    if (localStorage.getItem(CURRENT_USER) && !this.state.userLoggedOut) {\n      user = localStorage.getItem(CURRENT_USER).split(\".\");\n      initials = user[0].charAt(0) + user[1].match(/^([^.]*)./)[1].charAt(0);//concat first letters of first name and last name\n    }\n    return (\n      <div>\n        {this.renderRedirect()}\n        <Grid container >\n          <Grid item xs={2} container justify=\"flex-end\">\n            <Avatar className={classes.orangeAvatar} id=\"initials\">{initials}</Avatar>\n          </Grid>\n          <Grid item xs={4} container justify=\"flex-start\">\n            <Typography variant=\"h6\" id=\"user\" color=\"inherit\" className={classes.padding}>\n              {user ? user[0] : \"\"}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} container justify=\"flex-end\">\n            <Button variant=\"outlined\" color=\"primary\" id=\"logout\" className={classes.button} onClick={this.handleLogout}>\n              Log Out\n          </Button>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nAccountLogoutSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AccountLogoutSelect);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport zemosoIcon from '../_images/zemoso-logo.svg'\nimport { Grid, Avatar } from '@material-ui/core';\nimport AccountLogoutSelect from './AccountLogoutSelect';\n\nconst styles = {\n    root: {\n        flexGrow: 1\n    },\n    grow: {\n        flexGrow: 1,\n        paddingTop: 12\n    },\n    imageLogo: {\n        position: 'absolute',\n        paddingTop: 10\n    },\n    shadow: { boxShadow: 'none' }\n};\n\nfunction Header(props) {\n    const { classes } = props;\n    document.title=\"Z-Talent\";\n    return (\n        <AppBar position=\"static\" color=\"default\" className={classes.shadow}>\n            <Toolbar>\n                <Grid container spacing={24}>\n                    <Grid item xs={1} container justify=\"flex-end\">\n                        <Avatar alt=\"Remy Sharp\" src={zemosoIcon} className={classes.imageLogo} />\n                    </Grid>\n                    <Grid item xs={4} container justify=\"flex-start\">\n                        <Typography variant=\"h6\" id = \"title\" color=\"inherit\" className={classes.grow}>\n                            Z-Talent\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={7} container justify=\"flex-end\">\n                        <AccountLogoutSelect onLogOut={props.onLogOut} />\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);\n","import { getAllEmployees, createNewEmployee, updateEmployee, deleteEmployee } from \"../_services/EmployeeService\"\nimport { UserActions } from \"../_constants/UserActionConstants\"\nimport { showSnackBar } from \"./snackbar.action\";\nimport { Messages } from \"../_constants/Messages\";\n\nexport function getEmployees() {\n    return dispatch => {\n        retrieveEmployees(dispatch);\n    };\n}\n\nexport function createEmployee(employee) {\n    return dispatch => {\n        createNewEmployee(employee)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.ADD_EMPLOYEE_SUCCESS));\n                    retrieveEmployees(dispatch);\n                },\n                error => {\n                    dispatchError(dispatch, error)\n                }\n            );\n    };\n}\n\nexport function editEmployee(employee) {\n    return dispatch => {\n        updateEmployee(employee)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.UPDATE_EMPLOYEE_SUCCESS));\n                    retrieveEmployees(dispatch);\n                },\n                error => {\n                    dispatchError(dispatch, error)\n                }\n            );\n    };\n}\n\nexport function deleteExistingEmployee(id) {\n    return dispatch => {\n        deleteEmployee(id)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.DELETE_EMPLOYEE_SUCCESS));\n                    retrieveEmployees(dispatch);\n\n                },\n                error => {\n                    dispatchError(dispatch, error)\n                }\n            );\n    };\n}\n\nfunction retrieveEmployees(dispatch) {\n    getAllEmployees()\n        .then(data => {\n            dispatch(fetchData(data));\n        }, error => {\n            dispatchError(dispatch, error)\n        });\n}\n\nfunction fetchData(data) {\n    return { type: UserActions.FETCH_ALL_EMPLYOEES, data: data }\n}\n\nfunction dispatchError(dispatch, error) {\n    if (error) {\n        const errorResponse = error.response;\n        const error1 = (errorResponse && errorResponse.data) ? errorResponse.data.message : Messages.GENERIC_ERROR;\n        dispatch(snackbar(\"error\", error1));\n    }\n}\n\nfunction snackbar(variant, message) {\n    return showSnackBar({\n        variant: variant,\n        open: true,\n        message: message\n    });\n}","import Axios from \"axios\";\nimport { EMPLOYEES_URL } from \"../_constants/UriConstants\";\nimport { generateRequestOptions, authHeader } from \"../_helpers/auth-header\";\n\nexport function getAllEmployees() {\n    const headers = { 'Authorization': 'Bearer ' + localStorage.getItem('refresh_token'), 'Content-Type': 'application/json' }\n    const requestOptions = generateRequestOptions('GET', EMPLOYEES_URL, null, headers)\n    return Axios(requestOptions)\n}\n\nexport function createNewEmployee(employee) {\n    const formData = {\n        'empId': employee.empId,\n        'firstName': employee.firstName,\n        'lastName': employee.lastName,\n        'designation': employee.designation,\n        'skills': employee.skills,\n        'projectAssigned': employee.projectAssigned,\n        'projects': employee.projects\n    };\n\n    return authHeader()\n        .then(headers => {\n            const requestOptions = generateRequestOptions('POST', EMPLOYEES_URL, formData, headers)\n            return Axios(requestOptions)\n        })\n}\n\nexport function updateEmployee(employee) {\n    const formData = {\n        'empId': employee.empId,\n        'firstName': employee.firstName,\n        'lastName': employee.lastName,\n        'designation': employee.designation,\n        'skills': employee.skills,\n        'projectAssigned': employee.projectAssigned,\n        'projects': employee.projects\n    };\n\n    return authHeader()\n        .then(headers => {\n            const requestOptions = generateRequestOptions('PUT', EMPLOYEES_URL + `/${employee.id}`, formData, headers)\n            return Axios(requestOptions)\n        })\n}\n\nexport function deleteEmployee(id) {\n    return authHeader()\n        .then(headers => {\n            const requestOptions = generateRequestOptions('DELETE', EMPLOYEES_URL + `/${id}`, null, headers)\n            return Axios(requestOptions)\n        })\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Typography } from '@material-ui/core';\n\nclass ConfirmationDialogRaw extends React.Component {\n\n    render() {\n        const { value, ...other } = this.props;\n\n        return (\n            <Dialog\n                id=\"confirmation_dialog\"\n                disableBackdropClick\n                disableEscapeKeyDown\n                maxWidth=\"xs\"\n                aria-labelledby=\"confirmation-dialog-title\"\n                {...other}\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">\n                    Confirm\n                </DialogTitle>\n                <DialogContent>\n                    <Typography id=\"confirmation-dialog-content\" variant=\"caption\" color=\"inherit\">{this.props.content}</Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button id=\"delete_ok\" variant=\"contained\" onClick={this.props.handleOk} color=\"primary\">\n                        Ok\n                    </Button>\n                    <Button id=\"delete_cancel\" onClick={this.props.handleCancel}>\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nConfirmationDialogRaw.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    paper: {\n        width: '80%',\n        maxHeight: 435,\n    },\n});\n\nclass ConfirmationDialog extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleCancel = () => {\n        this.setState({ open: false });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ open: nextProps.open });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <ConfirmationDialogRaw\n                    classes={{\n                        paper: classes.paper,\n                    }}\n                    open={this.state.open}\n                    handleCancel={this.handleCancel}\n                    handleOk={this.props.handleOk}\n                    content={this.props.content}\n                />\n            </div>\n        );\n    }\n}\n\nConfirmationDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ConfirmationDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { Messages } from \"../_constants/Messages\";\nimport { getEmployees, deleteExistingEmployee } from \"../_actions/employee.action\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DoneAll from \"@material-ui/icons/DoneAll\"\nimport CloseRounded from \"@material-ui/icons/CloseOutlined\";\nimport EditIcon from '@material-ui/icons/EditRounded';\nimport DeleteIcon from '@material-ui/icons/DeleteForeverRounded';\nimport ConfirmationDialog from './ConfirmationDialog';\nimport { Button } from '@material-ui/core';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexWrap: 'wrap',\n        width: '100%',\n        marginTop: theme.spacing.unit,\n        overflowX: 'auto',\n    },\n    tablecell: {\n        fontSize: 15\n    },\n    removeLine: {\n        fontSize: 15,\n        textDecoration: \"none\"\n    },\n    heading: {\n        fontSize: 20,\n        weight: \"bold\"\n    },\n    table: {\n        minWidth: 700,\n    },\n    chip: {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n        color: \"primary\",\n        fontSize: 10\n    }\n});\n\nclass EmployeeSkillDataTable extends React.Component {\n    options = {\n        textLabels: {\n            body: {\n                noMatch: Messages.NO_TABULAR_DATA\n            }\n        },\n        pagination: true,\n        rowsPerPageOptions: [10, 25, 50, 100],\n        search: true,\n        print: false,\n        download: true,\n        viewColumns: true,\n        filter: true,\n        sort: true,\n        selectableRows: false,\n        filterType: 'multiselect'\n    };\n\n    state = {\n        rowsData: [],\n        columns: [],\n        deleteEmpId: null,\n        openConfirmDialog: false\n    };\n\n    onDeleteEmployee = (id) => {\n        this.setState({\n            deleteEmpId: id,\n            openConfirmDialog: true\n        })\n    }\n\n    handleOk = () => {\n        this.props.deleteExistingEmployee(this.state.deleteEmpId);\n    }\n\n    componentWillMount() {\n        const columns = [\n            {\n                property: \"empId\",\n                name: \"ID\",\n                label: <Typography><strong>ID</strong></Typography>,\n                options: {\n                    sortDirection: \"asc\",\n                    filter: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return this.renderTableCell(value);\n                    }\n                }\n            },\n            {\n                property: \"firstName\",\n                name: \"FIRST NAME\",\n                label: <Typography><strong>FIRST NAME</strong></Typography>,\n                options: {\n                    filter: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return this.renderTableCell(value);\n                    }\n                }\n            },\n            {\n                property: \"lastName\",\n                name: \"LAST NAME\",\n                label: <Typography><strong>LAST NAME</strong></Typography>,\n                options: {\n                    filter: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return this.renderTableCell(value);\n                    }\n                },\n            },\n            {\n                property: \"designation\",\n                name: \"DESIGNATION\",\n                label: <Typography><strong>DESIGNATION</strong></Typography>,\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return this.renderTableCell(value);\n                    }\n                },\n            },\n            {\n                property: \"skills\",\n                name: \"SKILLS\",\n                label: <Typography><strong>SKILLS</strong></Typography>,\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        let componentsToRender = value.map(skill => {\n                            return (\n                                <Chip\n                                    key={skill}\n                                    label={skill}\n                                    color=\"primary\"\n                                    className={this.props.classes.chip}\n                                />\n                            )\n                        })\n                        return (\n                            <div className={this.props.classes.root}>\n                                {componentsToRender}\n                            </div>\n                        );\n                    }\n                }\n            },\n            {\n                property: \"projects\",\n                name: \"PROJECTS\",\n                label: <Typography><strong>PROJECTS</strong></Typography>,\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        let componentsToRender = value.map(project => {\n                            return (\n                                <Chip\n                                    key={project}\n                                    label={project}\n                                    color=\"secondary\"\n                                    className={this.props.classes.chip}\n                                />\n                            )\n                        })\n                        return (\n                            <div className={this.props.classes.root}>\n                                {componentsToRender}\n                            </div>\n                        );\n                    }\n                }\n            },\n            {\n                property: \"projectAssigned\",\n                name: \"ASSIGN\",\n                label: <Typography><strong>ASSIGN</strong></Typography>,\n                options: {\n                    filterType: 'dropdown',\n                    customFilterListRender: value => {\n                        return value ? \"Assigned\" : \"Not Assigned\"\n                    },\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        let componentsToRender = value ? <DoneAll color=\"primary\" /> : <CloseRounded color=\"secondary\" />\n                        return (\n                            componentsToRender\n                        );\n                    }\n                }\n            },\n            {\n                property: \"edit\",\n                name: \"EDIT\",\n                label: <Typography><strong>EDIT</strong></Typography>,\n                options: {\n                    sort: false,\n                    filter: false,\n                    download: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return (\n                            <Button id=\"edit\" onClick={() => this.props.handleEditEmployeeClick(value)}>\n                                <EditIcon />\n                            </Button>\n                        )\n                    }\n                }\n            },\n            {\n                property: \"delete\",\n                name: \"DELETE\",\n                label: <Typography><strong>DELETE</strong></Typography>,\n                options: {\n                    sort: false,\n                    filter: false,\n                    download: false,\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        return (\n                            <Button id=\"delete\" onClick={() => this.onDeleteEmployee(value)}>\n                                <DeleteIcon color=\"secondary\" onClick={() => this.onDeleteEmployee(value)} />\n                            </Button>\n                        )\n                    }\n                }\n            }\n        ];\n        this.setState({ columns: columns });\n    }\n\n    componentDidMount() {\n        this.props.getEmployees();\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.employees) {\n            let employees = nextProps.employees.data;\n            let datasets = [];\n            employees.forEach(employee => {\n                let dataset = [];\n                this.state.columns.forEach(column => {\n                    if (column.property === \"skills\" || column.property === \"projects\") {//for skills and projects push items array into dataset \n                        let items = [];\n                        employee[column.property].forEach(item => {\n                            items.push(item);\n                        })\n                        dataset.push(items.sort());\n                    } else if (column.property === \"edit\") {//for edit add the employee information as value\n                        let editEmp = {\n                            \"id\": employee[\"id\"],\n                            \"empId\": employee[\"empId\"],\n                            \"firstName\": employee[\"firstName\"],\n                            \"lastName\": employee[\"lastName\"],\n                            \"designation\": employee[\"designation\"],\n                            \"skills\": employee[\"skills\"],\n                            \"projectAssigned\": employee[\"projectAssigned\"],\n                            \"projects\": employee[\"projects\"]\n                        };\n                        dataset = dataset.concat(editEmp);\n                    } else if (column.property === \"delete\") {//for delete add the employee id as value\n                        dataset = dataset.concat(employee[\"id\"]);\n                    } else {\n                        dataset = dataset.concat(employee[column.property]);\n                    }\n                });\n                datasets.push(dataset);\n            });\n            this.setState({\n                rowsData: datasets,\n                deleteEmpId: null,\n                openConfirmDialog: false\n            });\n        }\n    }\n\n    renderTableCell = (value) => {\n        return (\n            <Typography className={this.props.classes.tablecell}>{value}</Typography>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <MUIDataTable\n                    title={\"Employee Skills\"}\n                    className={this.props.classes.table}\n                    data={this.state.rowsData}\n                    columns={this.state.columns}\n                    options={this.options}\n                />\n                <ConfirmationDialog\n                    open={this.state.openConfirmDialog}\n                    handleOk={this.handleOk}\n                    content=\"Are you sure you want to delete this employee\"\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapsStateToProps(state) {\n    const { employees } = state.employees;\n    return {\n        employees\n    };\n}\n\nconst connectedEmployeeSkillData = connect(mapsStateToProps, { getEmployees, deleteExistingEmployee })(\n    withStyles(styles)(EmployeeSkillDataTable)\n);\n\nexport default connectedEmployeeSkillData;\n","import { getAllSkills, createSkill } from \"../_services/SkillService\"\nimport { UserActions } from \"../_constants/UserActionConstants\"\nimport { showSnackBar } from \"./snackbar.action\";\nimport { Messages } from \"../_constants/Messages\";\n\nexport function getSkills() {\n    return dispatch => {\n        getAllSkills()\n            .then(\n                data => {\n                    dispatch(fetchData(data));\n                },\n                error => {\n                    dispatchError(dispatch, error)\n                }\n            );\n    };\n\n    function fetchData(data) {\n        return { type: UserActions.FETCH_ALL_SKILLS, data: data }\n    }\n}\n\nexport function insertNewSkill(skill) {\n    return dispatch => {\n        createSkill(skill)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.ADD_SKILL_SUCCESS));\n                    this.getSkills();\n                },\n                error => {\n                    dispatchError(dispatch, error)\n                }\n            );\n    };\n}\n\n// export function deleteExistingSkill(id) {\n//     return dispatch => {\n//         deleteSkill(id)\n//             .then(\n//                 data => {\n//                     dispatch(snackbar(\"success\", Messages.DELETE_SKILL_SUCCESS));\n//                     this.getSkills();\n//                 },\n//                 error => {\n//                     dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n//                 }\n//             );\n//     };\n// }\n\nfunction dispatchError(dispatch, error) {\n    if (error) {\n        const errorResponse = error.response;\n        const error1 = (errorResponse && errorResponse.data) ? errorResponse.data.message : Messages.GENERIC_ERROR;\n        dispatch(snackbar(\"error\", error1));\n    }\n}\n\nfunction snackbar(variant, message) {\n    return showSnackBar({\n        variant: variant,\n        open: true,\n        message: message\n    });\n}\n","import { getAllProjects, createProject } from \"../_services/ProjectService\"\nimport { UserActions } from \"../_constants/UserActionConstants\"\nimport { showSnackBar } from \"./snackbar.action\";\nimport { Messages } from \"../_constants/Messages\";\n\nexport function getProjects() {\n    return dispatch => {\n        getAllProjects()\n            .then(\n                data => {\n                    dispatch(fetchData(data));\n                },\n                error => {\n                   dispatchError(dispatch, error)\n                }\n            );\n    };\n\n    function fetchData(data) {\n        return { type: UserActions.FETCH_ALL_PROJECTS, data: data }\n    }\n}\n\nexport function insertNewProject(project) {\n    return dispatch => {\n        createProject(project)\n            .then(\n                data => {\n                    dispatch(snackbar(\"success\", Messages.ADD_PROJECT_SUCCESS));\n                    this.getProjects();\n                },\n                error => {\n                    dispatchError(dispatch, error)\n                }\n            );\n    };\n}\n\n// export function deleteExistingProject(id) {\n//     return dispatch => {\n//         deleteProject(id)\n//             .then(\n//                 data => {\n//                     dispatch(snackbar(\"success\", Messages.DELETE_PROJECT_SUCCESS));\n//                     this.getProjects();\n//                 },\n//                 error => {\n//                     dispatch(snackbar(\"error\", getErrorMessage(error.response)));\n//                 }\n//             );\n//     }\n// }\n\nfunction dispatchError(dispatch, error) {\n    if (error) {\n        const errorResponse = error.response;\n        const error1 = (errorResponse && errorResponse.data) ? errorResponse.data.message : Messages.GENERIC_ERROR;\n        dispatch(snackbar(\"error\", error1));\n    }\n}\n\nfunction snackbar(variant, message) {\n    return showSnackBar({\n        variant: variant,\n        open: true,\n        message: message\n    });\n}\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\nimport { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    input: {\n        display: 'flex',\n        padding: 0,\n    },\n    valueContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flex: 1,\n        alignItems: 'center',\n        overflow: 'hidden',\n    },\n    chip: {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n    },\n    chipFocused: {\n        backgroundColor: emphasize(\n            theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n            0.08,\n        ),\n    },\n    noOptionsMessage: {\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    },\n    placeholder: {\n        position: 'absolute',\n        left: 2,\n        fontSize: 16,\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing.unit,\n        left: 0,\n        right: 0\n    },\n    divider: {\n        height: theme.spacing.unit * 2,\n    },\n});\n\nfunction inputComponent({ inputRef, ...props }) {\n    return <div ref={inputRef} {...props} />;\n}\n\nfunction Option(props) {\n    return (\n        <MenuItem\n            buttonRef={props.innerRef}\n            selected={props.isFocused}\n            component=\"div\"\n            style={{\n                fontWeight: props.isSelected ? 500 : 400,\n            }}\n            {...props.innerProps}\n        >\n            {props.children}\n        </MenuItem>\n    );\n}\n\nfunction Placeholder(props) {\n    return (\n        <Typography\n            color=\"textSecondary\"\n            className={props.selectProps.classes.placeholder}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction ValueContainer(props) {\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nfunction Control(props) {\n    return (\n        <TextField\n            fullWidth\n            InputProps={{\n                inputComponent,\n                inputProps: {\n                    className: props.selectProps.classes.input,\n                    inputRef: props.innerRef,\n                    children: props.children,\n                    ...props.innerProps\n                },\n            }}\n            {...props.selectProps.textFieldProps}\n        />\n    );\n}\n\nfunction MultiValue(props) {\n    return (\n        <Chip\n            tabIndex={-1}\n            label={props.children}\n            className={classNames(props.selectProps.classes.chip, {\n                [props.selectProps.classes.chipFocused]: props.isFocused,\n            })}\n            onDelete={props.removeProps.onClick}\n            deleteIcon={<CancelIcon {...props.removeProps} />}\n        />\n    );\n}\n\nclass MultiSelector extends React.Component {\n    newItem = \"\";\n    state = {\n        multi: this.props.selectedItems ? this.props.selectedItems.map(item => ({\n            value: item,\n            label: item\n        })) : null,\n        items: this.props.items,\n        searchText: \"\"\n    };\n\n    handleNewItemClick = (value) => {\n        if (value.length !== 0) {\n            this.newItem = value;\n            this.props.onAddNewItem(value);\n        }\n    }\n\n    onInputChange = (newValue, actionMeta) => {\n        this.setState({\n            searchText: newValue\n        })\n    }\n\n    NoOptionsMessage = (props) => {\n        return (\n            <Button id=\"no_options\" fullWidth variant=\"contained\" color=\"default\" size=\"small\" onClick={() => this.handleNewItemClick(props.selectProps.inputValue)}>\n                {props.selectProps.inputValue.length !== 0 && <AddIcon />}\n                <Typography\n                    color=\"textPrimary\"\n                    className={props.selectProps.classes.noOptionsMessage}\n                    {...props.innerProps}\n                >\n                    {props.selectProps.inputValue.length !== 0 ? this.props.noOptionsMessage : props.children}\n                </Typography>\n            </Button>\n        );\n    }\n\n    components = {\n        Control,\n        MultiValue,\n        NoOptionsMessage: this.NoOptionsMessage,\n        Option,\n        Placeholder,\n        ValueContainer\n    };\n\n    handleChange = value => {\n        let items = [];\n        this.setState({\n            multi: value,\n        });\n        value.forEach(item => {\n            items.push(item.value);\n        });\n        this.props.handleSelectedItems(items)\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.items !== this.props.items) {\n            this.setState({\n                items: nextProps.items,\n                searchText: \"\"\n            });\n            let newSeletectedItems = this.state.multi;\n            newSeletectedItems.push({\n                value: this.newItem,\n                label: this.newItem\n            });\n            this.handleChange(newSeletectedItems)\n        }\n    }\n\n    render() {\n        const { classes, theme } = this.props;\n        const suggestions = this.state.items.map(item => ({\n            value: item,\n            label: item\n        }));\n        const selectStyles = {\n            input: base => ({\n                ...base,\n                color: theme.palette.text.primary,\n                '& input': {\n                    font: 'inherit',\n                },\n            }),\n        };\n\n        return (\n            <div className={classes.root}>\n                <NoSsr>\n                    <Select\n                        classes={classes}\n                        styles={selectStyles}\n                        textFieldProps={{\n                            label: this.props.name,\n                            InputLabelProps: {\n                                shrink: true,\n                            },\n                        }}\n                        options={suggestions}\n                        components={this.components}\n                        value={this.state.multi}\n                        onChange={this.handleChange}\n                        placeholder={this.props.placeholder}\n                        inputValue={this.state.searchText}\n                        onInputChange={this.onInputChange}\n                        menuPlacement=\"top\"\n                        maxMenuHeight={200}\n                        isMulti\n                    />\n                </NoSsr>\n            </div>\n        );\n    }\n}\n\nMultiSelector.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MultiSelector);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { connect } from 'react-redux'\nimport { createEmployee, editEmployee } from \"../_actions/employee.action\";\nimport { getSkills, insertNewSkill } from \"../_actions/skill.action\";\nimport { getProjects, insertNewProject } from \"../_actions/project.action\";\nimport { withStyles, Typography, FormControl, Grid } from '@material-ui/core';\nimport MultiSelector from './MultiSelector'\nimport { UserActions } from '../_constants/UserActionConstants';\nimport { Messages } from '../_constants/Messages';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  main: {\n    width: 'auto',\n    display: 'block',\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  form: {\n    width: '100%',\n  }\n})\nlet hasError = { firstname: false, lastName: false, designation: false }\nclass EmployeeInfoDialog extends React.Component {\n\n  state = {\n    open: false,\n    allSkills: [],//for populating skills dropdown\n    allProjects: [],//for populating projects dropdown\n    id: \"\",\n    empId: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    designation: \"\",\n    skills: [],//skills that user has selected\n    projects: [],//projects that user has selected\n    projectAssigned: false,\n    mode: UserActions.CREATE_NEW_EMPLOYEE\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n    this.props.handleClose();\n  };\n\n  onChangeEmpId = (event) => {\n    this.setNewState('empId', event.target.value);\n  }\n\n  onChangeFirstName = (event) => {\n    this.setNewState('firstName', event.target.value);\n  }\n\n  onChangeLastName = (event) => {\n    this.setNewState('lastName', event.target.value);\n  }\n\n  onChangeDesignation = (event) => {\n    this.setNewState('designation', event.target.value);\n  }\n\n  handleSelectedSkills = (skills) => {\n    this.setNewState('skills', skills);\n  }\n\n  handleSelectedProjects = (projects) => {\n    this.setNewState('projects', projects);\n  }\n\n  setNewState = (key, value) => {\n    let newState = {\n      id: this.state.id,\n      empId: this.state.empId,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      designation: this.state.designation,\n      skills: this.state.skills,\n      projects: this.state.projects,\n      projectAssigned: (key === 'projects' ? value.length !== 0 : this.state.projectAssigned),//if user doesn't select any project the field is false\n      mode: this.state.mode\n    }\n    newState[key] = value;\n    this.setState(newState);\n  }\n\n  handleOkay = (e) => {\n    e.preventDefault();\n    let empRequest = {\n      empId: this.state.empId,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      designation: this.state.designation,\n      skills: this.state.skills,\n      projects: this.state.projects,\n      projectAssigned: this.state.projectAssigned\n    };\n\n    for (var key in hasError) {\n      if (hasError[key]) {\n        return\n      }\n    }\n    if (this.state.mode === UserActions.CREATE_NEW_EMPLOYEE) {\n      this.props.createEmployee(empRequest);\n    } else if (this.state.mode === UserActions.UPDATE_EMPLOYEE) {\n      empRequest.id = this.state.id;\n      this.props.editEmployee(empRequest);\n    }\n    this.handleClose();\n  }\n\n  componentWillMount() {\n    this.props.getSkills();\n    this.props.getProjects();\n  }\n\n  onAddNewSkill = (value) => {\n    this.props.insertNewSkill(value)\n  }\n\n  onAddNewProject = (value) => {\n    this.props.insertNewProject(value)\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if ((nextProps.allSkills && nextProps.allSkills.data.length !== this.state.allSkills.length)\n      || (nextProps.allProjects && nextProps.allProjects.data.length !== this.state.allProjects.length)) {\n      this.setState({\n        open: nextProps.openDialog,\n        allSkills: nextProps.allSkills ? nextProps.allSkills.data.sort() : this.state.allSkills,\n        allProjects: nextProps.allProjects ? nextProps.allProjects.data.sort() : this.state.allProjects\n      });\n    } else {\n      this.setState({\n        open: nextProps.openDialog,\n        id: nextProps.id,\n        empId: nextProps.empId || \"\",\n        firstName: nextProps.firstName,\n        lastName: nextProps.lastName,\n        designation: nextProps.designation,\n        skills: nextProps.skills || [],\n        projects: nextProps.projects || [],\n        projectAssigned: nextProps.projectAssigned,\n        mode: nextProps.mode\n      });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          maxWidth={'sm'}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogContent>\n            <main className={classes.main}>\n              <Typography id=\"dialog_title\" component=\"h1\" variant=\"h5\">\n                {this.state.mode}\n              </Typography>\n              <form className={classes.form} onSubmit={this.handleOkay}>\n                <FormControl fullWidth>\n                  <TextField\n                    required\n                    autoFocus\n                    margin=\"dense\"\n                    type=\"number\"\n                    inputProps={{ min: 1 }}\n                    id=\"emp_id\"\n                    disabled={this.state.mode === UserActions.UPDATE_EMPLOYEE}\n                    value={this.state.empId}\n                    onChange={this.onChangeEmpId}\n                    label=\"Employee Id\"\n                    fullWidth\n                  />\n                </FormControl>\n                <FormControl fullWidth>\n                  <TextField\n                    margin=\"dense\"\n                    id=\"first_name\"\n                    required\n                    value={this.state.firstName}\n                    onChange={this.onChangeFirstName}\n                    error={validateTextField(this.state.firstName, 'firstName')}\n                    helperText={validateTextField(this.state.firstName, 'firstName') ? Messages.SPECIAL_CHARACTERS_NOT_ALLOWED : ' '}\n                    label=\"First Name\"\n                    fullWidth\n                  />\n                </FormControl>\n                <FormControl fullWidth>\n                  <TextField\n                    margin=\"dense\"\n                    id=\"last_name\"\n                    value={this.state.lastName}\n                    onChange={this.onChangeLastName}\n                    error={validateTextField(this.state.lastName, 'lastName')}\n                    helperText={validateTextField(this.state.lastName, 'lastName') ? Messages.SPECIAL_CHARACTERS_NOT_ALLOWED : ' '}\n                    label=\"Last Name\"\n                    fullWidth\n                  />\n                </FormControl>\n                <FormControl margin=\"normal\" required fullWidth>\n                  <MultiSelector\n                    id=\"skills\"\n                    items={this.state.allSkills}\n                    selectedItems={this.state.skills}\n                    handleSelectedItems={this.handleSelectedSkills}\n                    name=\"skills\"\n                    placeholder=\"Select multiple skills\"\n                    onAddNewItem={this.onAddNewSkill}\n                    noOptionsMessage=\"Add this skill\"\n                  />\n                </FormControl>\n                <FormControl margin=\"normal\" required fullWidth>\n                  <MultiSelector\n                    id=\"projects\"\n                    items={this.state.allProjects}\n                    selectedItems={this.state.projects}\n                    handleSelectedItems={this.handleSelectedProjects}\n                    name=\"projects\"\n                    placeholder=\"Select multiple projects\"\n                    onAddNewItem={this.onAddNewProject}\n                    noOptionsMessage=\"Add this project\"\n                  />\n                </FormControl>\n                <FormControl required fullWidth>\n                  <TextField\n                    id=\"designation\"\n                    required\n                    margin=\"dense\"\n                    error={validateTextField(this.state.designation, 'designation')}\n                    helperText={validateTextField(this.state.designation, 'designation') ? Messages.SPECIAL_CHARACTERS_NOT_ALLOWED : ' '}\n                    value={this.state.designation}\n                    onChange={this.onChangeDesignation}\n                    label=\"Designation\"\n                    fullWidth\n                  />\n                </FormControl>\n                <Grid container justify=\"flex-end\">\n                  <Button variant=\"contained\" id=\"employee_submit\" type=\"submit\" color=\"primary\">\n                    Okay\n                  </Button>\n                  <Button onClick={this.handleClose} id=\"employee_cancel\" color=\"primary\">\n                    Cancel\n                   </Button>\n                </Grid>\n              </form>\n            </main>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapsStateToProps(state) {\n  const { skills } = state.skills;\n  const { projects } = state.projects;\n  return {\n    allSkills: skills,\n    allProjects: projects\n  };\n}\n\nfunction validateTextField(input, fieldName) {\n  let isInvalid = input !== \"\" && !/^[a-zA-Z]{1}/.test(input);\n  hasError[fieldName] = isInvalid;\n  return isInvalid;\n}\n\nexport default connect(mapsStateToProps, { getSkills, insertNewSkill, createEmployee, editEmployee, getProjects, insertNewProject })(\n  withStyles(styles)(EmployeeInfoDialog)\n);\n\n","import Axios from \"axios\";\nimport { SKILLS_URL } from \"../_constants/UriConstants\";\nimport { generateRequestOptions, authHeader } from \"../_helpers/auth-header\";\n\nexport function getAllSkills() {\n    const headers = { 'Authorization': 'Bearer ' + localStorage.getItem('refresh_token'), 'Content-Type': 'application/json' }\n    const requestOptions = generateRequestOptions('GET', SKILLS_URL, null, headers)\n    return Axios(requestOptions)\n}\n\nexport function createSkill(skill) {\n    const formData = {\n        'tag': skill\n    };\n    return authHeader()\n        .then(headers => {\n            const requestOptions = generateRequestOptions('POST', SKILLS_URL, formData, headers)\n            return Axios(requestOptions)\n        })\n}\n\n// export function deleteSkill(id) {\n//     let headers = { 'content-type': 'application/json' };\n\n//     return Axios.delete(DELETE_SKILL_URL+`${id}`,  {\n//         auth: {\n//             username: AUTH_USER,\n//             password: AUTH_PASS\n//         },\n//         headers: headers\n//     });\n// }\n\n","import Axios from \"axios\";\nimport { PROJECTS_URL } from \"../_constants/UriConstants\";\nimport { generateRequestOptions, authHeader } from \"../_helpers/auth-header\";\n\nexport function getAllProjects() {\n    const headers = { 'Authorization': 'Bearer ' + localStorage.getItem('refresh_token'), 'Content-Type': 'application/json' }\n    const requestOptions = generateRequestOptions('GET', PROJECTS_URL, null, headers)\n    return Axios(requestOptions)\n\n}\n\nexport function createProject(project) {\n    const formData = {\n        'title': project\n    };\n    return authHeader()\n        .then(headers => {\n            const requestOptions = generateRequestOptions('POST', PROJECTS_URL, formData, headers)\n            return Axios(requestOptions)\n        })\n}\n\n// export function deleteProject(id) {\n//     let headers = { 'content-type': 'application/json' };\n\n//     return Axios.delete(DELETE_PROJECT_URL+`${id}`,  {\n//         auth: {\n//             username: AUTH_USER,\n//             password: AUTH_PASS\n//         },\n//         headers: headers\n//     });\n// }\n","import React from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { Typography, Button } from '@material-ui/core';\n\nclass CreateNewButton extends React.Component {\n\n  render() {\n    return (\n      <Button variant=\"contained\" color=\"primary\" href={this.props.href} onClick={this.props.onClick} {...this.props}>\n        <AddIcon />\n        <Typography variant=\"caption\" color=\"inherit\">{this.props.name}</Typography>\n      </Button>\n    )\n  }\n}\n\nexport default (CreateNewButton);","import React, { Component } from \"react\";\nimport Header from \"../../_components/Header\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport EmployeeSkillDataTable from \"../../_components/EmployeeSkillDataTable\";\nimport { Grid } from \"@material-ui/core\";\nimport EmployeeInfoDialog from \"../../_components/EmployeeInfoDialog\";\nimport { UserActions } from \"../../_constants/UserActionConstants\";\nimport Snackbar from \"../../_components/CustomizedSnackbar\";\nimport CreateNewButton from \"../../_components/CreateNewButton\";\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n        height: \"100%\"\n    },\n    card: {\n        height: 290,\n        width: 280\n    },\n    gridContainer: {\n        height: \"100%\",\n        margin: 0,\n        width: \"100%\"\n    },\n    box: {\n        borderRadius: 0\n    },\n    margin: {\n        marginLeft: 20,\n        marginRight: 20\n    }\n};\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = this.resetState();\n    }\n\n    handleEditEmployeeClick = (employee) => {\n        this.setState({\n            open: true,\n            id: employee.id,\n            empId: employee.empId,\n            firstName: employee.firstName,\n            lastName: employee.lastName,\n            designation: employee.designation,\n            skills: employee.skills,\n            projects: employee.projects,\n            projectAssigned: employee.projectAssigned,\n            mode: UserActions.UPDATE_EMPLOYEE\n        })\n    }\n\n    handleDialogClose = () => {\n        this.setState({\n            open: false\n        })\n    }\n\n    handleNewEmployeeClick = () => {\n        let state = this.resetState();\n        state.open = true;\n        this.setState(state);\n    }\n\n    resetState = () => {\n        return {\n            open: false,\n            id: null,\n            empId: null,\n            firstName: \"\",\n            lastName: \"\",\n            designation: \"\",\n            skills: \"\",\n            projects: \"\",\n            projectAssigned: false,\n            mode: UserActions.CREATE_NEW_EMPLOYEE\n        };\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <Header />\n                    </Grid>\n                    <Grid item xs={2} />\n                    <Grid item xs={10}>\n                        <Grid container >\n                            <Grid item xs={10}>\n                            </Grid>\n                            <Grid item xs={2} container justify=\"center\">\n                                <CreateNewButton\n                                    id=\"add_employee\"\n                                    name=\"Add Employee\"\n                                    onClick={this.handleNewEmployeeClick}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} className={this.props.classes.margin}>\n                        <EmployeeSkillDataTable handleEditEmployeeClick={this.handleEditEmployeeClick} />\n                    </Grid>\n                </Grid>\n                <EmployeeInfoDialog\n                    id={this.state.id}\n                    empId={this.state.empId}\n                    handleClose={this.handleDialogClose}\n                    openDialog={this.state.open}\n                    firstName={this.state.firstName}\n                    lastName={this.state.lastName}\n                    designation={this.state.designation}\n                    skills={this.state.skills}\n                    projects={this.state.projects}\n                    projectAssigned={this.state.projectAssigned}\n                    mode={this.state.mode}\n                />\n                <Snackbar />\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Dashboard);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dashboard from '../dashboard';\n\nconst styles = {\n    root: {\n        height: '100%'\n    },\n    content: {\n        height: '90%'\n    }\n};\n\nconst HomePage = (props) => (\n    <div className={props.classes.root}>\n        <div className={props.classes.content}>\n            <Dashboard />\n        </div>\n    </div>\n);\n\nexport default withStyles(styles)(HomePage);\n"],"sourceRoot":""}